name: Code CI

on:
  push:
  pull_request:
env:
  # Target python version. Make sure Dockerfile FROM's match this.
  PYTHON: "3.10"
  TAGGED: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
  TRUE_BOOL: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # image names must be all lower case
      - run: |
          echo IMAGE_REPOSITORY=$(tr '[:upper:]' '[:lower:]' <<< "${{ github.repository }}") >> $GITHUB_ENV

      - name: Job 1 environ
        run: |
          echo PYTHON ${{ env.PYTHON }} # works
          echo TAGGED ${{ env.TAGGED }} # works
          echo PYTHON ${{ github.env.PYTHON }} # fails (blank)
          echo TAGGED ${{ github.env.TAGGED }} # fails (blank)
          echo PYTHON ${{ github.env.PYTHON }} # fails
          echo NOT TAGGED ${{ ! env.TAGGED }} # fails (FALSE!)
          echo NOT TAGGED ${{ ! github.env.TAGGED }} # fails (FALSE!)
          echo IMAGE_REPOSITORY ${{ env.IMAGE_REPOSITORY }} # works

      - name: check TAGGED github
        if: ${{ ! github.env.TAGGED }}
        run: echo HELLO # works

      - name: check TAGGED env
        if: ${{ ! env.TAGGED }}
        run: echo HELLO # fails - does not run

      - name: check True bool env
        if: env.TRUE_BOOL
        run: echo HELLO # works

      - name: check False bool env
        if: ${{ ! env.TRUE_BOOL }}
        run: echo HELLO # works - does not run

      - name: check True bool env
        if: github.env.TRUE_BOOL
        run: echo HELLO # fails - does not run

      - name: check True bool env
        if: ${{ env.TRUE_BOOL }}
        run: echo HELLO # works

      - name: check True bool env
        if: ${{ github.env.TRUE_BOOL }}
        run: echo HELLO # fails - does not run

      - name: check Blank
        if: ${{ env.NOTHING }}
        run: echo HELLO # works - does not run as expected

      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

  test2:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: job 2 environ
        run: |
          echo PYTHON ${{ env.PYTHON }} # works
          echo TAGGED ${{ env.TAGGED }} # works
          echo IMAGE_REPOSITORY ${{ env.IMAGE_REPOSITORY }} # fails $GITHUB_ENV is local to job

      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
